-- Update City for a Supplier
set serveroutput on;
DECLARE
    v_city VARCHAR2(50);
BEGIN
    v_city := 'CHENNAI';
    UPDATE supplier SET sup_city = v_city WHERE sup_name = 'MANMARK';
    DBMS_OUTPUT.PUT_LINE('The city of MANMARK has been updated to: ' || v_city);
    COMMIT;
END;
/

-- Insert Data into the Supplier Table
DECLARE
    v_sup_id supplier.sup_id%TYPE := 311;
    v_sup_name supplier.sup_name%TYPE := 'PRIYA';
BEGIN
    INSERT INTO supplier (sup_id, sup_name, sup_door, sup_street, sup_city, sup_pincod, sup_r, sup_s) VALUES (v_sup_id, v_sup_name, 'P/789', 'PARK STREET', 'MADURAI', 620009, 'Y', 'N');
    DBMS_OUTPUT.PUT_LINE('Supplier data added for ' || v_sup_name);
    COMMIT;
END;
/

-- Calculate Total Number of Suppliers in a City
DECLARE
    v_total_suppliers NUMBER := 0;
BEGIN
    SELECT COUNT(*) INTO v_total_suppliers FROM supplier WHERE sup_city = 'MADURAI';
    DBMS_OUTPUT.PUT_LINE('Total number of suppliers in MADURAI: ' || v_total_suppliers);
    COMMIT;
END;
/

-- Display Supplier Details using %ROWTYPE
DECLARE
    v_supplier supplier%ROWTYPE;
BEGIN
    SELECT * INTO v_supplier FROM supplier WHERE sup_name = 'KRISHNA';
    DBMS_OUTPUT.PUT_LINE('Supplier Name: ' || v_supplier.sup_name);
    DBMS_OUTPUT.PUT_LINE('City: ' || v_supplier.sup_city);
    DBMS_OUTPUT.PUT_LINE('Street: ' || v_supplier.sup_street);
    DBMS_OUTPUT.PUT_LINE('Door No: ' || v_supplier.sup_door);
    DBMS_OUTPUT.PUT_LINE('Pin Code: ' || v_supplier.sup_pincod);
END;
/

-- Record Example with %ROWTYPE
DECLARE
    TYPE supplier_record IS RECORD (
        sup_name   supplier.sup_name%TYPE,
        sup_city   supplier.sup_city%TYPE,
        sup_street supplier.sup_street%TYPE,
        sup_door   supplier.sup_door%TYPE,
        sup_pincod supplier.sup_pincod%TYPE
    );
    v_supplier supplier_record;
BEGIN
    SELECT sup_name, sup_city, sup_street, sup_door, sup_pincod INTO v_supplier FROM supplier WHERE sup_name = 'SUN';
    DBMS_OUTPUT.PUT_LINE('Supplier Name: ' || v_supplier.sup_name);
    DBMS_OUTPUT.PUT_LINE('City: ' || v_supplier.sup_city);
    DBMS_OUTPUT.PUT_LINE('Street: ' || v_supplier.sup_street);
    DBMS_OUTPUT.PUT_LINE('Door No: ' || v_supplier.sup_door);
    DBMS_OUTPUT.PUT_LINE('Pin Code: ' || v_supplier.sup_pincod);
END;
/

-- PL/SQL Block with IF, ELSIF, and ELSE
DECLARE
    v_sup_name supplier.sup_name%TYPE;
    v_city supplier.sup_city%TYPE;
BEGIN
    SELECT sup_name, sup_city
    INTO v_sup_name, v_city
    FROM supplier
    WHERE sup_name = 'VK';
    IF v_city = 'MADURAI' THEN
        DBMS_OUTPUT.PUT_LINE(v_sup_name || ' is located in MADURAI.');
    ELSIF v_city = 'VNR' THEN
        DBMS_OUTPUT.PUT_LINE(v_sup_name || ' is located in VNR.');
    ELSE
        DBMS_OUTPUT.PUT_LINE(v_sup_name || ' is located in another city.');
    END IF;
END;
/

-- Basic Loop to Display Numbers from 1 to 5
DECLARE
    v_num NUMBER := 1;
BEGIN
    LOOP
        DBMS_OUTPUT.PUT_LINE('Number: ' || v_num);
        v_num := v_num + 1;
        EXIT WHEN v_num > 5;
    END LOOP;
END;
/

-- FOR Loop to Print Numbers from 1 to 5
BEGIN
    FOR v_num IN 1..5 LOOP
        DBMS_OUTPUT.PUT_LINE('Number: ' || v_num);
    END LOOP;
END;
/

-- FOR Loop to Print Odd Numbers from 1 to 10
set serveroutput on;
BEGIN
    FOR i IN 1..10 BY 2 LOOP
        DBMS_OUTPUT.PUT_LINE('Value of i: ' || i);
    END LOOP;
END;
/

-- WHILE Loop to Display Numbers from 1 to 5
DECLARE
    v_num NUMBER := 1;
BEGIN
    WHILE v_num <= 5 LOOP
        DBMS_OUTPUT.PUT_LINE('Number: ' || v_num);
        v_num := v_num + 1;
    END LOOP;
END;
/

-- FOR Loop with Cursor (Explicit Cursor)
DECLARE
    CURSOR supplier_cursor IS
        SELECT sup_name FROM supplier;
BEGIN
    FOR supplier_record IN supplier_cursor LOOP
        DBMS_OUTPUT.PUT_LINE('Supplier Name: ' || supplier_record.sup_name);
    END LOOP;
END;
/

-- FOR Loop with Index Cursor (Implicit Cursor)
BEGIN
    FOR supplier_record IN (SELECT sup_name FROM supplier) LOOP
        DBMS_OUTPUT.PUT_LINE('Supplier Name: ' || supplier_record.sup_name);
    END LOOP;
END;
/

-- EXIT and CONTINUE Statements
DECLARE
    v_num NUMBER := 0;
BEGIN
    FOR v_num IN 1..10 LOOP
        IF v_num = 5 THEN
            CONTINUE;
        END IF;
        DBMS_OUTPUT.PUT_LINE('Number: ' || v_num);
        IF v_num = 8 THEN
            EXIT;
        END IF;
    END LOOP;
END;
/

-- NO_DATA_FOUND Exception
DECLARE
    v_city supplier.sup_city%TYPE;
BEGIN
    SELECT sup_city INTO v_city FROM supplier WHERE sup_id = 99999;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Error: No supplier found with the provided supplier ID.');
END;
/

-- TOO_MANY_ROWS Exception
DECLARE
    v_city supplier.sup_city%TYPE;
BEGIN
    SELECT sup_city INTO v_city FROM supplier WHERE sup_city = 'MADURAI';
EXCEPTION
    WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE('Error: More than one supplier found for this city.');
END;
/

-- ZERO_DIVIDE Exception
DECLARE
    v_total_suppliers NUMBER := 1000;
    v_number_of_cities NUMBER := 0;
    v_average_suppliers NUMBER;
BEGIN
    v_average_suppliers := v_total_suppliers / v_number_of_cities;
    DBMS_OUTPUT.PUT_LINE('Average Suppliers: ' || v_average_suppliers);
EXCEPTION
    WHEN ZERO_DIVIDE THEN
        DBMS_OUTPUT.PUT_LINE('Error: Division by zero, number of cities is zero.');
END;
/

-- VALUE_ERROR Exception
DECLARE
    v_amount VARCHAR2(10);
    v_sup_id NUMBER;
BEGIN
    v_amount := 'XYZ';
    v_sup_id := TO_NUMBER(v_amount);
EXCEPTION
    WHEN VALUE_ERROR THEN
        DBMS_OUTPUT.PUT_LINE('Error: Invalid value for number.');
END;
/

-- OTHERS Exception
DECLARE
    v_city supplier.sup_city%TYPE;
BEGIN
    SELECT sup_city INTO v_city FROM supplier WHERE sup_id = 99999;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No supplier found with this ID.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An unexpected error occurred: ' || SQLERRM);
END;
/

-- USER_DEFINED Exception
DECLARE
    e_invalid_city EXCEPTION;
    v_city VARCHAR2(50) := 'INVALID_CITY';
BEGIN
    IF v_city = 'INVALID_CITY' THEN
        RAISE e_invalid_city;
    END IF;
EXCEPTION
    WHEN e_invalid_city THEN
        DBMS_OUTPUT.PUT_LINE('Error: The city name is invalid.');
END;
/
